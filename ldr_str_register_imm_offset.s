.data		/* the .data section is created dynamically and it's addresses cannot be predicted easily */
var1: .word 3	/* variable 1 in memory */
var2: .word 4	/* variable 2 in memory */

.text		/* start of text section (program code) */
.global _start

_start:
	ldr r0, adr_var1	/* load the memory address of var1 via label adr_var1 into r0 */
	ldr r1, adr_var2	/* load the memory address of var2 via label adr_var1 into r1 */
	ldr r2, [r0]		/* load the value at memory address found in r0 (0x3) into r2 */
	str r2, [r1, #2]	/* address mode: offset. Store value found in r2 (0x3) to memory address found in r1 + 2. Base register (r1) unmodified. */
	str r2, [r1, #4]!	/* address mode: pre-indexed. Store value found in r2 (0x3) to memory address found in r1 + 4. Base register (r1) modified: r1 = r1 + 4. */
	ldr r3, [r1], #4	/* address mode: post-indexed. Load value found at memory address stored in r2 to register r3. Base register (r1) modified: r1 = r1 + 4. */
	bkpt

/* Literal pool, memory area in the same code section, constants, strings and offsets are stored here */
adr_var1: .word var1	/* address to var1 stored here */
adr_var2: .word var2	/* address to var2 stored here */
